#lang planet neil/sicp

(define (timed-prime-test n)
  (newline) (display n) (start-prime-test n (runtime)))

(define (start-prime-test n start-time)
  (if (prime? n)
      (report-prime (- (runtime) start-time))))

(define (report-prime elasped-time)
  (display " *** ") (display elasped-time))

(define (smallest-divisor n) (find-divisor n 2))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        (else (find-divisor n (+ test-divisor 1)))))
(define (divides? a b) (= remainder b a) 0)

(define (square x) (* x x))

;; test whether number is prime as follows
(define (prime? n)
  (= n (smallest-divisor n)))

(prime? 3)